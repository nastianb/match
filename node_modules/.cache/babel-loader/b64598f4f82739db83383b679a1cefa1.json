{"ast":null,"code":"var _jsxFileName = \"/Users/nastia/Desktop/projeto tinder/tinder/src/TelaList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BASE_URL } from './Constants/url';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TelaList() {\n  _s();\n\n  const [matches, setMatches] = useState([]);\n  useEffect(() => {\n    getMatches();\n  }, [matches]);\n\n  const getMatches = () => {\n    axios.get(`${BASE_URL}matches`).then(res => {\n      console.log(res.data.matches);\n      setMatches(res.data);\n    }).catch(err => {\n      console.log(err.response.data);\n    });\n  };\n\n  const render = matches.map(match => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: match.photo,\n        alt: match.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: match.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, match.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"arrox-doce\",\n      src: matches.photo,\n      alt: matches.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"arrox\",\n      children: matches.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TelaList, \"YhlcfFikU4Xnm4DkUW695+Zqf6o=\");\n\n_c = TelaList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TelaList\");","map":{"version":3,"sources":["/Users/nastia/Desktop/projeto tinder/tinder/src/TelaList.js"],"names":["React","useState","useEffect","axios","BASE_URL","TelaList","matches","setMatches","getMatches","get","then","res","console","log","data","catch","err","response","render","map","match","photo","name","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB;;;AAGA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAK;AACbM,IAAAA,UAAU;AACX,GAFQ,EAEN,CAACF,OAAD,CAFM,CAAT;;AAIA,QAAME,UAAU,GAAG,MAAM;AACvBL,IAAAA,KAAK,CACFM,GADH,CAEK,GAAEL,QAAS,SAFhB,EAKGM,IALH,CAKQC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASR,OAArB;AACAC,MAAAA,UAAU,CAACI,GAAG,CAACG,IAAL,CAAV;AAEA,KATH,EAUGC,KAVH,CAUSC,GAAG,IAAI;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACC,QAAJ,CAAaH,IAAzB;AACD,KAZH;AAcD,GAfD;;AAgBA,QAAMI,MAAM,GAAEZ,OAAO,CAACa,GAAR,CAAaC,KAAD,IAAS;AACjC,wBACE;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEA,KAAK,CAACC,KAAhB;AAAuB,QAAA,GAAG,EAAED,KAAK,CAACE;AAAlC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIF,KAAK,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAUF,KAAK,CAACG,EAAhB;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GAPa,CAAd;AASA,sBACE;AAAA,4BAEA;AAAK,MAAA,SAAS,EAAC,YAAf;AAA6B,MAAA,GAAG,EAAEjB,OAAO,CAACe,KAA1C;AAAiD,MAAA,GAAG,EAAEf,OAAO,CAACgB;AAA9D;AAAA;AAAA;AAAA;AAAA,YAFA,eAGQ;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBAAwBhB,OAAO,CAACgB;AAAhC;AAAA;AAAA;AAAA;AAAA,YAHR;AAAA,kBADF;AASD;;GAxCuBjB,Q;;KAAAA,Q","sourcesContent":["import React, {useState, useEffect}  from 'react';\nimport axios from 'axios';\nimport { BASE_URL } from './Constants/url';\n\n\nexport default function TelaList() {\n  const [matches, setMatches] = useState([])\n  useEffect(() =>{\n    getMatches()\n  }, [matches])\n\n  const getMatches = () => {\n    axios\n      .get(\n        `${BASE_URL}matches`\n        \n      )\n      .then(res => {\n       console.log(res.data.matches);\n       setMatches(res.data)\n\n      })\n      .catch(err => {\n        console.log(err.response.data);\n      })\n      \n  };\n  const render =matches.map((match)=>{\n    return(\n      <div key={match.id}>\n        <img src={match.photo} alt={match.name} />\n        <p>{match.name}</p>\n      </div>\n    )\n  })\n\n  return (\n    <>\n    \n    <img className=\"arrox-doce\"  src={matches.photo} alt={matches.name}/>\n            <h2  className=\"arrox\">{matches.name}</h2>\n            \n   \n    </>\n  )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}